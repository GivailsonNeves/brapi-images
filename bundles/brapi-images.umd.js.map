{"version":3,"file":"brapi-images.umd.js.map","sources":["ng://brapi-images/src/app/brapi-images/models.ts","ng://brapi-images/src/app/brapi-images/product-image.pipe.ts","ng://brapi-images/src/app/brapi-images/brapi-images.module.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport interface _BrapiConfig {\n    pathApi: string;\n    userName: string;\n    password: string;\n    proposito: string;\n    defaultSize: number;\n}\n\nexport const BrapiConfig = new InjectionToken<_BrapiConfig>(\"BrapiConfig\");","import { Pipe, PipeTransform, Inject } from '@angular/core';\nimport { BrapiConfig, _BrapiConfig } from './models';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Pipe({\n  name: 'productImage'\n})\nexport class ProductImagePipe implements PipeTransform {\n\n  private static auth: BrapiAuth = null;\n\n  constructor(\n    @Inject(BrapiConfig) private config: _BrapiConfig,\n    private _http: HttpClient\n  ){}\n  transform(value: any, args?: any): Promise<string> {\n    console.log(value, args)\n    return new Promise((resolve, reject) => {\n      let storagePath: string = window.localStorage.getItem(args+value);\n      if (storagePath) {\n        resolve(storagePath);\n      } else {\n        let _requestToken: Observable<void> = null;\n        if (!ProductImagePipe.auth)\n          _requestToken = this._logInApi();\n        else if (ProductImagePipe.auth.isExpired())\n          _requestToken = this._loginRefresh();\n\n        if (_requestToken) {\n          _requestToken.subscribe(\n            data => {\n              this._requestImage(value, args)\n                .subscribe(\n                  res => resolve(res),\n                  error => resolve('')\n                )\n            }, error => {\n              resolve('');\n            }\n          )\n        } else {\n          this._requestImage(value, args)\n          .subscribe(\n            data => resolve(data),\n            error => resolve('')\n          )\n        }\n      }\n\n    });\n  }\n\n  private _requestImage(paramn: string, type: string):Observable<string> {\n    return Observable.create(\n      observer => {\n        let type = 'pesquisarPorSku';\n        let _data : any = {\n          medida : this.config.defaultSize, \n          proposito : this.config.proposito\n        }\n        if(type == 'ean') { \n          type = 'pesquisarPorEan'; \n          _data.eans = [paramn];\n        } else {\n          _data.skus = [paramn];\n        }\n\n        this._http.post(`${this.config.pathApi}api/${type}`, _data,{ headers : {\n          \"Authorization\": `${ProductImagePipe.auth.token_type} ${ProductImagePipe.auth.access_token}`\n        }}).subscribe(\n          (data: any) => { if(data && data.length){ \n            window.localStorage.setItem(type+paramn, data[0].url);\n            observer.next(data[0].url); \n          } else observer.next(''); },\n          error => observer.next('')\n        )\n      }\n    );\n  }\n\n  private _logInApi():Observable<void> {\n    return Observable.create(\n      observer => {\n        this._http.post(`${this.config.pathApi}api/login`, \n          {\n            username: this.config.userName, \n            password: this.config.password\n          }\n        ).subscribe(\n          data => { ProductImagePipe.auth = BrapiAuth.fromData(data); observer.next() },\n          error => {console.error(error); observer.error(error)}\n        );\n      }\n    );\n  }\n\n  private _loginRefresh():Observable<void> {\n    return Observable.create(\n      observer => {\n        this._http.post(`${this.config.pathApi}/oauth/refresh_token`, \n          {\n            grant_type: \"refresh_token\",\n            refresh_token: ProductImagePipe.auth.refresh_token\n          }\n        ).subscribe(\n          data => { ProductImagePipe.auth = BrapiAuth.fromData(data); observer.next() },\n          error => {console.error(error); observer.error(error)}\n        );\n      }\n    );\n  }\n\n}\n\nclass BrapiAuth {\n\n  public username: string; \n  public roles: string[]; \n  public token_type: string;\n  public access_token: string;\n  public expires_in: number;\n  public refresh_token: string;\n  public expireIn: number;\n\n  public static fromData(data: any): BrapiAuth {\n    let object =  data as BrapiAuth;\n    object.expireIn = object.expireIn * 1000 + new Date().getTime();\n    return object;\n  }\n\n  public isExpired(): boolean{\n    return new Date().getTime() >= (this.expireIn - 30000);\n  }\n\n}","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProductImagePipe } from './product-image.pipe';\nimport { _BrapiConfig, BrapiConfig } from './models';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [ProductImagePipe],\n  exports: [ProductImagePipe],\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ]\n})\nexport class BrapiImagesModule { \n  static forRoot(config: _BrapiConfig): ModuleWithProviders{\n    return {\n      ngModule: BrapiImagesModule,\n      providers: [\n        ProductImagePipe,\n        {\n          provide: BrapiConfig,\n          useValue: config\n        }\n      ]\n    }\n  }\n}\n"],"names":["InjectionToken","Observable","Pipe","Inject","HttpClient","NgModule","CommonModule","HttpClientModule"],"mappings":"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"}
